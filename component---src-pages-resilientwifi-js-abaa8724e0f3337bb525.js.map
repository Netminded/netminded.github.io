{"version":3,"file":"component---src-pages-resilientwifi-js-abaa8724e0f3337bb525.js","mappings":"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","sources":["webpack://netminded-website/./src/pages/resilientwifi.js"],"sourcesContent":["import * as React from 'react'\nimport Layout from '../components/layout'\nimport { useState } from 'react'\nimport { Waypoint } from 'react-waypoint'\nimport { isEmpty, charactersOnly, validEmailFormat } from '../utils/utils'\nimport axios from 'axios'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faTowerBroadcast,\n  faWifi,\n  faGear,\n  faFaceSmile\n} from '@fortawesome/free-solid-svg-icons'\nimport SEO from '../components/seo'\n\nconst sendForm = (e, formData, setFormData, setFormErrors, setFormStatus) => {\n    e.preventDefault()\n\n    if(validateForm(formData, setFormErrors)) {\n        axios\n            .post(`https://formspree.io/f/${process.env.GATSBY_FORMSPREE_ID_RESILIENT_WIFI}`, formData, {\n                headers: {\n                    Accept: \"application/json\",\n                }\n            })\n            .then(({data}) => {\n                console.log(data)\n                if(data.ok) {\n                    setFormStatus({\n                        statusMessage: formFeedback[6],\n                        statusState: 'good',\n                    })\n                    setFormData({\n                        name: '',\n                        email: '',\n                        subject: 'NetMinded: Resilient WiFi Interest Registered',\n                        company: '',\n                        _gotcha: ''\n                    })\n                } else {\n                    if (Object.hasOwn(data, 'errors')) {\n                        setFormStatus({\n                            statusMessage: data[\"errors\"].map(error => error[\"message\"]).join(\", \"),\n                            statusState: 'bad',\n                        })\n                    } else {\n                        setFormStatus({\n                            statusMessage: formFeedback[5],\n                            statusState: 'bad',\n                        })\n                    }\n                }\n                setTimeout(() => setFormStatus({\n                    statusMessage: '',\n                    statusState: 'default',\n                }) , 8000)\n            })\n            .catch((error) => {\n                setFormStatus({\n                    statusMessage: formFeedback[5],\n                    statusState: 'bad',\n                })\n                setTimeout(() => setFormStatus({\n                    statusMessage: '',\n                    statusState: 'default',\n                }) , 8000)\n            })\n    }\n}\n\nconst validateForm = (formData, setFormErrors) => {\n    let formPass = true\n    let errorName = '', errorEmail = '', errorOrg = ''\n\n    if(isEmpty(formData.name)) {\n        formPass = false\n        errorName = formFeedback[0]\n    } else {\n        if(!charactersOnly(formData.name)) {\n            formPass = false\n            errorName = formFeedback[1]\n        }\n    }\n\n    if(isEmpty(formData.email)) {\n        formPass = false\n        errorEmail = formFeedback[2]\n    } else {\n        if(!validEmailFormat(formData.email)) {\n            formPass = false\n            errorEmail = formFeedback[3]\n        }\n    }\n\n    if(isEmpty(formData.company)) {\n        formPass = false\n        errorOrg = formFeedback[4]\n    }\n\n    if(!isEmpty(formData._gotcha)) {\n        formPass = false;\n    }\n\n    setFormErrors({\n        nameError: errorName,\n        emailError: errorEmail,\n        orgError: errorOrg\n    })\n\n    return formPass\n}\n\nconst formFeedback = [\n    'Please enter your name.',\n    'Please enter valid characters for your name.',\n    'Please enter your email address.',\n    'Please enter a valid email address.',\n    'Please enter your company name.',\n    'Sorry, there was an issue sending your registration. Please try again later!',\n    'Thank you for registering your interest, we\\'ll be in touch soon!'\n]\n\nconst ResilientWifi = () => {\nconst [isHero, setIsHero] = useState(true)\nconst [formData, setFormData] = React.useState({\n    name: '',\n    email: '',\n    subject: 'NetMinded: Resilient WiFi Interest Registered',\n    company: '',\n    _gotcha: ''\n})\nconst [formErrors, setFormErrors] = React.useState({\n    nameError: '',\n    emailError: '',\n    orgError: ''\n})\nconst [formStatus, setFormStatus] = React.useState({\n    statusMessage: '',\n    statusState: 'default',\n})\nreturn (\n    <Layout isHero={isHero} simpleNav={true}>\n            <Waypoint onEnter={() => setIsHero(true)} onLeave={() => setIsHero(false)} topOffset={100}>\n                <div className=\"hero-container landing-page\">\n                    <div className=\"hero-container-sub\">\n                        <div className=\"container\">\n                            <div className=\"row\">\n                                <div className=\"col-lg-6\">\n                                    <div className=\"hero-content\">\n                                        <h1>What Happens if the WiFi Stops Working?</h1>\n                                        <p>NetMinded has you covered.</p>\n                                        <div className=\"benefit-items\">\n                                            <h3><span className=\"benefit-icon\"><FontAwesomeIcon icon={faTowerBroadcast}/></span><span className=\"rf-item-text\">Mobile back-up to your WiFi</span></h3>\n                                            <h3><span className=\"benefit-icon benefit-icon--middle\"><FontAwesomeIcon icon={faWifi}/></span><span className=\"rf-item-text\">Improved WiFi performance</span></h3>\n                                            <h3><span className=\"benefit-icon\"><FontAwesomeIcon icon={faGear}/></span><span className=\"rf-item-text\">Easy to install</span></h3>\n                                            <h3><span className=\"benefit-icon benefit-icon--middle\"><FontAwesomeIcon icon={faFaceSmile}/></span><span className=\"rf-item-text\">No charge*</span></h3>\n                                        </div>\n                                        <p className='hero-terms'>*Subject to entering into a paid Internet contract with NetMinded when your current contract ends.</p>\n                                    </div>\n                                </div>\n                                <div className='offset-lg-1 col-lg-5'>\n                                    <div className='contact-container'>\n                                        <h2>Register Your Interest in Resilient WiFi</h2>\n                                        <form>\n                                            <div>\n                                                <label htmlFor=\"formName\" className=\"form-label\">Name</label>\n                                                <input placeholder=\"d'Artagnan\" type=\"text\" name=\"name\" className=\"form-control\" id=\"formName\" value={formData.name} onChange={(e) => {setFormData({...formData, name: e.target.value}); setFormErrors({...formErrors, nameError: ''})}} required />\n                                                {formErrors.nameError.length > 0 && <p className='form-error-text'>{formErrors.nameError}</p>}\n                                            </div>\n                                            <div className=\"mt-5\">\n                                                <label htmlFor=\"formEmail\" className=\"form-label\">Email Address</label>\n                                                <input placeholder=\"d.artagnan@musketeer.com\" type=\"email\" name=\"email\" className=\"form-control\" id=\"formEmail\" value={formData.email} onChange={(e) => {setFormData({...formData, email: e.target.value}); setFormErrors({...formErrors, emailError: ''})}} required />\n                                                {formErrors.emailError.length > 0 && <p className='form-error-text'>{formErrors.emailError}</p>}\n                                            </div>\n                                            <div>\n                                                <input type=\"text\" name=\"subject\" className=\"form-control\" id=\"formSubject\" value={formData.subject} required disabled/>\n                                            </div>\n                                            <div className=\"mt-5\">\n                                                <label htmlFor=\"formCompany\" className=\"form-label\">Company Name</label>\n                                                <input placeholder=\"Three Musketeers Ltd\" type=\"text\" name=\"company\" className=\"form-control\" id=\"formCompany\" value={formData.company} onChange={(e) => {setFormData({...formData, company: e.target.value}); setFormErrors({...formErrors, orgError: ''})}} required />\n                                                {formErrors.orgError.length > 0 && <p className='form-error-text'>{formErrors.orgError}</p>}\n                                            </div>\n                                            <div>\n                                                <input type=\"text\" name=\"_gotcha\" className=\"form-control\" id=\"formContact\" value={formData._gotcha} onChange={(e) => setFormData({...formData, _gotcha: e.target.value})} />\n                                            </div>\n                                            <div className=\"mt-5\">\n                                                <button className='btn' formNoValidate onClick={(e) => sendForm(e, formData, setFormData, setFormErrors, setFormStatus)}>\n                                                    Register Interest\n                                                </button>\n                                                {formStatus.statusMessage.length > 0 && <p className=\"text-center form-status\">{formStatus.statusMessage}</p>}\n                                            </div>\n                                                \n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ Waypoint>\n    </Layout>\n  )\n}\n\nexport default ResilientWifi\n\nexport const Head = () => (\n    <SEO title=\"NetPlaybook\" description=\"Your NetPlaybooks are the foundation of great products and the teams that deliver them.\" article={false} />\n)"],"names":["validateForm","formData","setFormErrors","formPass","errorName","errorEmail","errorOrg","isEmpty","name","formFeedback","charactersOnly","email","validEmailFormat","company","_gotcha","nameError","emailError","orgError","useState","isHero","setIsHero","React","subject","setFormData","formErrors","statusMessage","statusState","formStatus","setFormStatus","simpleNav","onEnter","onLeave","topOffset","className","icon","faTowerBroadcast","faWifi","faGear","faFaceSmile","htmlFor","placeholder","type","id","value","onChange","e","target","required","length","disabled","formNoValidate","onClick","preventDefault","axios","headers","Accept","then","data","console","log","ok","Object","hasOwn","map","error","join","setTimeout","catch","sendForm","Head","title","description","article"],"sourceRoot":""}