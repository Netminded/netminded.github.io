{"version":3,"file":"component---src-templates-blog-posts-list-js-6004bd9adb9e1eade7d8.js","mappings":"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","sources":["webpack://netminded-website/./src/components/blog/pagination.js","webpack://netminded-website/./src/templates/blog-posts-list.js"],"sourcesContent":["import * as React from 'react'\nimport { Link } from 'gatsby'\nimport kebabCase from \"lodash/kebabCase\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronLeft, faChevronRight } from '@fortawesome/free-solid-svg-icons'\n\nconst Pagination = ({currentPage, numPages, isBlogPage, tagName}) => {\n    const tagPath = tagName ? `${kebabCase(tagName)}/` : ``\n    const pagPath = isBlogPage ? `/blog/` : `/tags/${tagPath}`\n    return (\n        <div className=\"blog-page-pagination\">\n            <div className=\"blog-page-pagination-prev\">\n                {numPages > 1 && currentPage !== 1 && \n                    <Link className=\"btn\" to={`${currentPage === 2 ? pagPath : `${pagPath}${currentPage - 1}`}`}><FontAwesomeIcon icon={faChevronLeft} /> <span>Prev</span></Link>\n                } \n            </div>\n            <div>\n                {numPages > 1 &&\n                    <p className=\"blog-page-pagination-total\">{\" \"}{currentPage}/{numPages}{\" \"}</p>\n                }\n            </div>\n            <div className=\"blog-page-pagination-next\">\n                {currentPage !== numPages &&\n                    <Link className=\"btn\" to={`${pagPath}${currentPage + 1}`}><span>Next</span> <FontAwesomeIcon icon={faChevronRight} /></Link>\n                }                   \n            </div>\n        </div>\n    )\n}\n\nexport default Pagination","import * as React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image'\nimport { useState } from 'react'\nimport Layout from '../components/layout'\nimport Pagination from '../components/blog/pagination'\nimport Tags from '../components/blog/tags'\nimport AuthorSection from '../components/blog/author'\nimport { Waypoint } from 'react-waypoint'\n\nconst BlogPage = ({data, pageContext}) => {\n    const [isHero, setIsHero] = useState(true)\n    const {currentPage, numPages} = pageContext\n    const firstPost = data.allMdx.nodes[0]\n    const blogKeywords = \"NetMinded, Blog, News, Articles, Internet, Networking, Status, Communication\"\n    return (\n        <Layout pTitle=\"Blog\" pDescription=\"Articles, news, musings and more\" pKeywords={blogKeywords} isArticle={false} isHero={isHero} simpleNav={true}>\n            <header className=\"blog-page-header\">\n                <h1>NetMinded Blog</h1>\n                <h3>Articles, news, musings and more</h3>\n            </header> \n            <Waypoint onEnter={() => setIsHero(true)} onLeave={() => setIsHero(false)} topOffset={100} />\n            <div className=\"container\"> \n                <div className=\"row blog-page\">\n                    {currentPage === 1 ? <>\n                        <div className=\"col-lg-6 col-xl-7\">\n                            <article className=\"featured-post\" key={firstPost.id} itemScope itemType=\"http://schema.org/Article\">\n                                <Link to={`/blog/${firstPost.slug}`}>    \n                                    <GatsbyImage className=\"featured-post-hero\" image={getImage(firstPost.frontmatter.hero_image)} alt={firstPost.frontmatter.hero_image_alt} />\n                                </Link>\n                                <div className=\"featured-post-info\">\n                                    <h2 className=\"featured-post-title\">\n                                        <Link className=\"featured-post-title--link\" to={`/blog/${firstPost.slug}`}>\n                                            {firstPost.frontmatter.title}\n                                        </Link>\n                                    </h2>\n                                    <Tags tags={firstPost.frontmatter.tags} />\n                                    <AuthorSection author={firstPost.frontmatter.author} \n                                        posted={firstPost.frontmatter.date} reading={firstPost.fields.readingTime.text} />\n                                    <p className=\"featured-post-excerpt\">{firstPost.excerpt}</p>\n                                </div>\n                            </article>\n                        </div>\n                        <div className=\"col-lg-6 col-xl-5\">\n                            <ul className=\"featured-post-list\">\n                                {\n                                    data.allMdx.nodes.filter(node => node.id !== firstPost.id).map(node => (\n                                        <article className=\"featured-post-list-item\" key={node.id} itemScope itemType=\"http://schema.org/Article\">\n                                            <div className=\"featured-post-list-hero\">\n                                                <Link className=\"featured-post-list-hero--link\" to={`/blog/${node.slug}`}>\n                                                    <GatsbyImage className=\"featured-post-list-image\" image={getImage(node.frontmatter.hero_image)} alt={node.frontmatter.hero_image_alt} />\n                                                </Link>\n                                            </div>\n                                            <div className=\"featured-post-list-info\">\n                                                <h3 className=\"featured-post-list-title\">\n                                                    <Link className=\"featured-post-list-title--link\" to={`/blog/${node.slug}`}>\n                                                        {node.frontmatter.title.length > 35 ? `${node.frontmatter.title.slice(0, 35)}...` : node.frontmatter.title}\n                                                    </Link>\n                                                </h3>\n                                                <hr className=\"featured-post-list-divider\" />\n                                                <p>{node.frontmatter.date} Â· {node.fields.readingTime.text}</p>\n                                            </div>\n                                        </article>\n                                    ))\n                                }\n                            </ul>\n                        </div>\n                    </> :  \n                        <div className=\"col-12\">\n                            <ul className=\"standard-post-list\">\n                                {\n                                    data.allMdx.nodes.map(node => (\n                                        <article className=\"standard-post-list-item\" key={node.id} itemScope itemType=\"http://schema.org/Article\">\n                                            <div className=\"standard-post-list-hero\">\n                                                <Link className=\"standard-post-list-hero--link\" to={`/blog/${node.slug}`}>\n                                                    <GatsbyImage className=\"standard-post-list-image\" image={getImage(node.frontmatter.hero_image)} alt={node.frontmatter.hero_image_alt} />\n                                                </Link>\n                                            </div>\n                                            <div className=\"standard-post-list-info\">\n                                                <h3 className=\"standard-post-list-title\">\n                                                    <Link className=\"standard-post-list-title--link\" to={`/blog/${node.slug}`}>\n                                                        {node.frontmatter.title.length > 35 ? `${node.frontmatter.title.slice(0, 35)}...` : node.frontmatter.title}\n                                                    </Link>\n                                                </h3>\n                                                <hr className=\"standard-post-list-divider\" />\n                                                <p>{node.frontmatter.date} Â· {node.fields.readingTime.text}</p>\n                                            </div>\n                                        </article>\n                                    ))\n                                }\n                            </ul>\n                        </div>}\n                </div>\n                <Pagination currentPage={currentPage} numPages={numPages} isBlogPage={true} />\n            </div>\n        </Layout>\n    )\n}\n\nexport const query = graphql`\n    query blogListQuery($skip: Int!, $limit: Int!) {\n        allMdx(\n        sort: { fields: [frontmatter___date], order: DESC }\n        limit: $limit\n        skip: $skip\n        ) {\n            nodes {\n                slug\n                frontmatter {\n                    date(formatString: \"MMMM D, YYYY\")\n                    title\n                    author\n                    hero_image_alt\n                    hero_image {\n                        childImageSharp {\n                            gatsbyImageData\n                        }\n                    }\n                    tags\n                }\n                id\n                excerpt\n                fields {\n                    readingTime {\n                        text\n                    }\n                }\n            }\n        }\n    }\n`\n\nexport default BlogPage"],"names":["currentPage","numPages","isBlogPage","tagName","tagPath","kebabCase","pagPath","className","Link","to","icon","faChevronLeft","faChevronRight","data","pageContext","useState","isHero","setIsHero","firstPost","allMdx","nodes","pTitle","pDescription","pKeywords","isArticle","simpleNav","onEnter","onLeave","topOffset","key","id","itemScope","itemType","slug","G","image","getImage","frontmatter","hero_image","alt","hero_image_alt","title","tags","author","posted","date","reading","fields","readingTime","text","excerpt","filter","node","map","length","slice"],"sourceRoot":""}