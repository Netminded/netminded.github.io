{"version":3,"file":"component---src-pages-netprove-js-2f37bda6574e64f18e14.js","mappings":"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","sources":["webpack://netminded-website/./src/pages/netprove.js"],"sourcesContent":["import * as React from 'react'\nimport Layout from '../components/layout'\nimport { useState } from 'react'\nimport { Waypoint } from 'react-waypoint'\nimport { isEmpty, charactersOnly, validEmailFormat } from '../utils/utils'\nimport axios from 'axios'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {\n  faPhoneSlash,\n  faHouseSignal,\n  faClock\n} from '@fortawesome/free-solid-svg-icons'\nimport SEO from '../components/seo'\n\nconst sendForm = (e, formData, setFormData, setFormErrors, setFormStatus) => {\n    e.preventDefault()\n\n    if(validateForm(formData, setFormErrors)) {\n        axios\n            .post(`https://formspree.io/f/${process.env.GATSBY_FORMSPREE_ID_NETPROVE}`, formData, {\n                headers: {\n                    Accept: \"application/json\",\n                }\n            })\n            .then(({data}) => {\n                console.log(data)\n                if(data.ok) {\n                    setFormStatus({\n                        statusMessage: formFeedback[5],\n                        statusState: 'good',\n                    })\n                    setFormData({\n                        name: '',\n                        email: '',\n                        subject: 'NetMinded: NetProve Interest Registered',\n                        company: '',\n                        _gotcha: ''\n                    })\n                } else {\n                    if (Object.hasOwn(data, 'errors')) {\n                        setFormStatus({\n                            statusMessage: data[\"errors\"].map(error => error[\"message\"]).join(\", \"),\n                            statusState: 'bad',\n                        })\n                    } else {\n                        setFormStatus({\n                            statusMessage: formFeedback[4],\n                            statusState: 'bad',\n                        })\n                    }\n                }\n                setTimeout(() => setFormStatus({\n                    statusMessage: '',\n                    statusState: 'default',\n                }) , 8000)\n            })\n            .catch((error) => {\n                setFormStatus({\n                    statusMessage: formFeedback[4],\n                    statusState: 'bad',\n                })\n                setTimeout(() => setFormStatus({\n                    statusMessage: '',\n                    statusState: 'default',\n                }) , 8000)\n            })\n    }\n}\n\nconst validateForm = (formData, setFormErrors) => {\n    let formPass = true\n    let errorName = '', errorEmail = ''\n\n    if(isEmpty(formData.name)) {\n        formPass = false\n        errorName = formFeedback[0]\n    } else {\n        if(!charactersOnly(formData.name)) {\n            formPass = false\n            errorName = formFeedback[1]\n        }\n    }\n\n    if(isEmpty(formData.email)) {\n        formPass = false\n        errorEmail = formFeedback[2]\n    } else {\n        if(!validEmailFormat(formData.email)) {\n            formPass = false\n            errorEmail = formFeedback[3]\n        }\n    }\n\n    if(!isEmpty(formData._gotcha)) {\n        formPass = false;\n    }\n\n    setFormErrors({\n        nameError: errorName,\n        emailError: errorEmail\n    })\n\n    return formPass\n}\n\nconst formFeedback = [\n    'Please enter your name.',\n    'Please enter valid characters for your name.',\n    'Please enter your email address.',\n    'Please enter a valid email address.',\n    'Sorry, there was an issue sending your registration. Please try again later!',\n    'Thank you for registering your interest, we\\'ll be in touch soon!'\n]\n\nconst NetProvePage = () => {\nconst [isHero, setIsHero] = useState(true)\nconst [formData, setFormData] = React.useState({\n    name: '',\n    email: '',\n    subject: 'NetMinded: NetProve Interest Registered',\n    company: '',\n    _gotcha: ''\n})\nconst [formErrors, setFormErrors] = React.useState({\n    nameError: '',\n    emailError: ''\n})\nconst [formStatus, setFormStatus] = React.useState({\n    statusMessage: '',\n    statusState: 'default',\n})\nreturn (\n    <Layout isHero={isHero} simpleNav={true}>\n            <Waypoint onEnter={() => setIsHero(true)} onLeave={() => setIsHero(false)} topOffset={100}>\n                <div className=\"hero-container landing-page\">\n                    <div className=\"hero-container-sub\">\n                        <div className=\"container\">\n                            <div className=\"row\">\n                                <div className=\"col-lg-6\">\n                                    <div className=\"hero-content\">\n                                        <h1>Vital Demarcation Diagnostics in Real Time From Your FTTH/P Access Network Provider</h1>\n                                        <p>Your Network Provider (e.g. CityFibre) provides an Ethernet testpoint on their ONT. Our solution tests that endpoint and provides real time diagnostics to your ServiceOps solutions.</p>\n                                        <div className=\"benefit-items\">\n                                            <h3><span className=\"benefit-icon\"><FontAwesomeIcon icon={faPhoneSlash}/></span><span className=\"trust-item-text\">No need to call the provider help desk. Understand in real time if the provider ONT is up or down.</span></h3>\n                                            <h3><span className=\"benefit-icon benefit-icon--middle\"><FontAwesomeIcon icon={faHouseSignal}/></span><span className=\"trust-item-text\">See in real time if your customer has connected a device to the ONT.</span></h3>\n                                            <h3><span className=\"benefit-icon\"><FontAwesomeIcon icon={faClock}/></span><span className=\"trust-item-text\">Save hours of time by not having to call the provider to diagnose us/them connectivity issues.</span></h3>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className='offset-lg-1 col-lg-5'>\n                                    <div className='contact-container'>\n                                        <h2>Register Your Interest in NetProve - Ethernet CFM</h2>\n                                        <form>\n                                            <div>\n                                                <label htmlFor=\"formName\" className=\"form-label\">Name</label>\n                                                <input placeholder=\"d'Artagnan\" type=\"text\" name=\"name\" className=\"form-control\" id=\"formName\" value={formData.name} onChange={(e) => {setFormData({...formData, name: e.target.value}); setFormErrors({...formErrors, nameError: ''})}} required />\n                                                {formErrors.nameError.length > 0 && <p className='form-error-text'>{formErrors.nameError}</p>}\n                                            </div>\n                                            <div className=\"mt-5\">\n                                                <label htmlFor=\"formEmail\" className=\"form-label\">Email Address</label>\n                                                <input placeholder=\"d.artagnan@musketeer.com\" type=\"email\" name=\"email\" className=\"form-control\" id=\"formEmail\" value={formData.email} onChange={(e) => {setFormData({...formData, email: e.target.value}); setFormErrors({...formErrors, emailError: ''})}} required />\n                                                {formErrors.emailError.length > 0 && <p className='form-error-text'>{formErrors.emailError}</p>}\n                                            </div>\n                                            <div>\n                                                <input type=\"text\" name=\"subject\" className=\"form-control\" id=\"formSubject\" value={formData.subject} required disabled/>\n                                            </div>\n                                            <div className=\"mt-5\">\n                                                <label htmlFor=\"formCompany\" className=\"form-label\">Company Name (Optional)</label>\n                                                <input placeholder=\"Three Musketeers Ltd\" type=\"text\" name=\"company\" className=\"form-control\" id=\"formCompany\" value={formData.company} onChange={(e) => {setFormData({...formData, company: e.target.value})}} />\n                                            </div>\n                                            <div>\n                                                <input type=\"text\" name=\"_gotcha\" className=\"form-control\" id=\"formContact\" value={formData._gotcha} onChange={(e) => setFormData({...formData, _gotcha: e.target.value})} />\n                                            </div>\n                                            <div className=\"mt-5\">\n                                                <button className='btn' formNoValidate onClick={(e) => sendForm(e, formData, setFormData, setFormErrors, setFormStatus)}>\n                                                    Register Interest\n                                                </button>\n                                                {formStatus.statusMessage.length > 0 && <p className=\"text-center form-status\">{formStatus.statusMessage}</p>}\n                                            </div>\n                                                \n                                        </form>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ Waypoint>\n    </Layout>\n  )\n}\n\nexport default NetProvePage\n\nexport const Head = () => (\n    <SEO title=\"NetProve - Ethernet CFM\" description=\"Vital demarcation diagnostics in real time from your FTTH/P access network provider.\" article={false} />\n)"],"names":["validateForm","formData","setFormErrors","formPass","errorName","errorEmail","isEmpty","name","formFeedback","charactersOnly","email","validEmailFormat","_gotcha","nameError","emailError","useState","isHero","setIsHero","React","subject","company","setFormData","formErrors","statusMessage","statusState","formStatus","setFormStatus","simpleNav","onEnter","onLeave","topOffset","className","icon","faPhoneSlash","faHouseSignal","faClock","htmlFor","placeholder","type","id","value","onChange","e","target","required","length","disabled","formNoValidate","onClick","preventDefault","axios","headers","Accept","then","data","console","log","ok","Object","hasOwn","map","error","join","setTimeout","catch","sendForm","Head","title","description","article"],"sourceRoot":""}